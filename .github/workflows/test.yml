name: Test Performance Benchmark

on: 
  push:
  workflow_dispatch:
    inputs:
      test_runs:
        description: "Number of times to run each test"
        required: false
        default: 1
        type: number

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        tool: [playwright, cypress, selenium]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Install Playwright
        run: npx playwright install

      - name: Run Playwright Tests
        if: matrix.tool == 'playwright'
        run: |
          START=$(date +%s)
          for i in $(seq 1 ${{ github.event.inputs.test_runs }})
          do
            echo "Run #$i"
            node playwright_test.js
          done
          END=$(date +%s)
          PLAYWRIGHT_TIME=$((END-START))
          echo "PLAYWRIGHT_TIME=$PLAYWRIGHT_TIME" >> $GITHUB_ENV

      - name: Run Cypress Tests
        if: matrix.tool == 'cypress'
        run: |
          START=$(date +%s)
          for i in $(seq 1 ${{ github.event.inputs.test_runs }})
          do
            echo "Run #$i"
            npx cypress run --quiet --browser chrome
          done
          END=$(date +%s)
          CYPRESS_TIME=$((END-START))
          echo "CYPRESS_TIME=$CYPRESS_TIME" >> $GITHUB_ENV

      - name: Run Selenium Tests
        if: matrix.tool == 'selenium'
        run: |
          START=$(date +%s)
          for i in $(seq 1 ${{ github.event.inputs.test_runs }})
          do
            echo "Run #$i"
            node selenium_test.js
          done
          END=$(date +%s)
          SELENIUM_TIME=$((END-START))
          echo "SELENIUM_TIME=$SELENIUM_TIME" >> $GITHUB_ENV
  
  generate-chart:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download Execution Times
        uses: actions/download-artifact@v4
        with:
          name: execution-times

      - name: Generate Bar Chart
        run: python3 generate_chart.py

      - name: Upload Chart as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: execution-time-chart
          path: execution_time_chart_.png
